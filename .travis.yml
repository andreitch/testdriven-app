language: node_js
node_js: '9'

dist: bionic

addons:
  chrome: stable

services:
  - docker

env:
  global:
    DOCKER_COMPOSE_VERSION=1.23.2
    COMMIT=${TRAVIS_COMMIT::8}
    MAIN_REPO=https://github.com/andreitch/testdriven-app.git
    USERS=test-driven-users
    USERS_REPO=${MAIN_REPO}#${TRAVIS_BRANCH}:services/users
    USERS_DB=test-driven-users_db
    USERS_DB_REPO=${MAIN_REPO}#${TRAVIS_BRANCH}:services/users/project/db
    CLIENT=test-driven-client
    CLIENT_REPO=${MAIN_REPO}#${TRAVIS_BRANCH}:services/client
    SWAGGER=test-driven-swagger
    SWAGGER_REPO=${MAIN_REPO}#${TRAVIS_BRANCH}:services/swagger

before_install:
  - stty cols 80
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

before_script:
  - export TEST_URL=http://127.0.0.1
  - export REACT_APP_USERS_SERVICE_URL=http://127.0.0.1
  - export SECRET_KEY=my_precious
  - export DISPLAY=:99.0
  - export DOCKER_ENV=$(if [ "$TRAVIS_BRANCH" == "production" ]; then echo "prod"; else echo "stage"; fi)
  - sh -e /etc/init.d/xvfb start
  - sleep 3
  - docker-compose -f docker-compose-$DOCKER_ENV.yml up --build -d
  - docker-compose -f docker-compose-$DOCKER_ENV.yml exec users python manage.py recreate_db

script:
  - bash test.sh stage

after_script:
  - docker-compose -f docker-compose-prod.yml down

after_success:
  - bash ./docker-push.sh